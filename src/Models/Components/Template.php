<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Components;


class Template
{
    /**
     *
     * @var ?string $id
     */
    #[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     *
     *
     * @var ?TemplateObject $object
     */
    #[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\TemplateObject|null')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TemplateObject $object = null;

    /**
     * the id of the instance the template belongs to
     *
     * @var ?string $instanceId
     */
    #[\JMS\Serializer\Annotation\SerializedName('instance_id')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;

    /**
     * whether this is a system (default) or user overridden) template
     *
     * @var ?string $resourceType
     */
    #[\JMS\Serializer\Annotation\SerializedName('resource_type')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceType = null;

    /**
     * whether this is an email or SMS template
     *
     * @var ?string $templateType
     */
    #[\JMS\Serializer\Annotation\SerializedName('template_type')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $templateType = null;

    /**
     * user-friendly name of the template
     *
     * @var ?string $name
     */
    #[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;

    /**
     * machine-friendly name of the template
     *
     * @var ?string $slug
     */
    #[\JMS\Serializer\Annotation\SerializedName('slug')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slug = null;

    /**
     * position with the listing of templates
     *
     * @var ?int $position
     */
    #[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $position = null;

    /**
     * whether this template can be reverted to the corresponding system default
     *
     * @var ?bool $canRevert
     */
    #[\JMS\Serializer\Annotation\SerializedName('can_revert')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canRevert = null;

    /**
     * whether this template can be deleted
     *
     * @var ?bool $canDelete
     */
    #[\JMS\Serializer\Annotation\SerializedName('can_delete')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDelete = null;

    /**
     * whether this template can be enabled or disabled, true only for notification SMS templates
     *
     * @var ?bool $canToggle
     */
    #[\JMS\Serializer\Annotation\SerializedName('can_toggle')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canToggle = null;

    /**
     * email subject
     *
     * @var ?string $subject
     */
    #[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subject = null;

    /**
     * the editor markup used to generate the body of the template
     *
     * @var ?string $markup
     */
    #[\JMS\Serializer\Annotation\SerializedName('markup')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $markup = null;

    /**
     * the template body before variable interpolation
     *
     * @var ?string $body
     */
    #[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;

    /**
     * list of variables that are available for use in the template body
     *
     * @var ?array<string> $availableVariables
     */
    #[\JMS\Serializer\Annotation\SerializedName('available_variables')]
    #[\JMS\Serializer\Annotation\Type('array<string>|null')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $availableVariables = null;

    /**
     * list of variables that must be contained in the template body
     *
     * @var ?array<string> $requiredVariables
     */
    #[\JMS\Serializer\Annotation\SerializedName('required_variables')]
    #[\JMS\Serializer\Annotation\Type('array<string>|null')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $requiredVariables = null;

    /**
     *
     * @var ?string $fromEmailName
     */
    #[\JMS\Serializer\Annotation\SerializedName('from_email_name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromEmailName = null;

    /**
     *
     * @var ?string $replyToEmailName
     */
    #[\JMS\Serializer\Annotation\SerializedName('reply_to_email_name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyToEmailName = null;

    /**
     *
     * @var ?bool $deliveredByClerk
     */
    #[\JMS\Serializer\Annotation\SerializedName('delivered_by_clerk')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deliveredByClerk = null;

    /**
     *
     * @var ?bool $enabled
     */
    #[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;

    /**
     * Unix timestamp of last update.
     *
     *
     *
     * @var ?int $updatedAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updatedAt = null;

    /**
     * Unix timestamp of creation.
     *
     *
     *
     * @var ?int $createdAt
     */
    #[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;

    /**
     * @param  ?string  $id
     * @param  ?TemplateObject  $object
     * @param  ?string  $instanceId
     * @param  ?string  $resourceType
     * @param  ?string  $templateType
     * @param  ?string  $name
     * @param  ?string  $slug
     * @param  ?int  $position
     * @param  ?bool  $canRevert
     * @param  ?bool  $canDelete
     * @param  ?bool  $canToggle
     * @param  ?string  $subject
     * @param  ?string  $markup
     * @param  ?string  $body
     * @param  ?array<string>  $availableVariables
     * @param  ?array<string>  $requiredVariables
     * @param  ?string  $fromEmailName
     * @param  ?string  $replyToEmailName
     * @param  ?bool  $deliveredByClerk
     * @param  ?bool  $enabled
     * @param  ?int  $updatedAt
     * @param  ?int  $createdAt
     */
    public function __construct(?string $id = null, ?TemplateObject $object = null, ?string $instanceId = null, ?string $resourceType = null, ?string $templateType = null, ?string $name = null, ?string $slug = null, ?int $position = null, ?bool $canRevert = null, ?bool $canDelete = null, ?bool $canToggle = null, ?string $subject = null, ?string $markup = null, ?string $body = null, ?array $availableVariables = null, ?array $requiredVariables = null, ?string $fromEmailName = null, ?string $replyToEmailName = null, ?bool $deliveredByClerk = null, ?bool $enabled = null, ?int $updatedAt = null, ?int $createdAt = null)
    {
        $this->id = $id;
        $this->object = $object;
        $this->instanceId = $instanceId;
        $this->resourceType = $resourceType;
        $this->templateType = $templateType;
        $this->name = $name;
        $this->slug = $slug;
        $this->position = $position;
        $this->canRevert = $canRevert;
        $this->canDelete = $canDelete;
        $this->canToggle = $canToggle;
        $this->subject = $subject;
        $this->markup = $markup;
        $this->body = $body;
        $this->availableVariables = $availableVariables;
        $this->requiredVariables = $requiredVariables;
        $this->fromEmailName = $fromEmailName;
        $this->replyToEmailName = $replyToEmailName;
        $this->deliveredByClerk = $deliveredByClerk;
        $this->enabled = $enabled;
        $this->updatedAt = $updatedAt;
        $this->createdAt = $createdAt;
    }
}