<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;

use Clerk\Backend\Utils\SpeakeasyMetadata;
class GetUserListRequest
{
    /**
     * Returns users with the specified email addresses.
     *
     * Accepts up to 100 email addresses.
     * Any email addresses not found are ignored.
     *
     * @var ?array<string> $emailAddress
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=email_address')]
    public ?array $emailAddress = null;

    /**
     * Returns users with the specified phone numbers.
     *
     * Accepts up to 100 phone numbers.
     * Any phone numbers not found are ignored.
     *
     * @var ?array<string> $phoneNumber
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=phone_number')]
    public ?array $phoneNumber = null;

    /**
     * Returns users with the specified external ids.
     *
     * For each external id, the `+` and `-` can be
     * prepended to the id, which denote whether the
     * respective external id should be included or
     * excluded from the result set.
     * Accepts up to 100 external ids.
     * Any external ids not found are ignored.
     *
     * @var ?array<string> $externalId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=external_id')]
    public ?array $externalId = null;

    /**
     * Returns users with the specified usernames.
     *
     * Accepts up to 100 usernames.
     * Any usernames not found are ignored.
     *
     * @var ?array<string> $username
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=username')]
    public ?array $username = null;

    /**
     * Returns users with the specified web3 wallet addresses.
     *
     * Accepts up to 100 web3 wallet addresses.
     * Any web3 wallet addressed not found are ignored.
     *
     * @var ?array<string> $web3Wallet
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=web3_wallet')]
    public ?array $web3Wallet = null;

    /**
     * Returns users with the user ids specified.
     *
     * For each user id, the `+` and `-` can be
     * prepended to the id, which denote whether the
     * respective user id should be included or
     * excluded from the result set.
     * Accepts up to 100 user ids.
     * Any user ids not found are ignored.
     *
     * @var ?array<string> $userId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=user_id')]
    public ?array $userId = null;

    /**
     * Returns users that have memberships to the
     *
     * given organizations.
     * For each organization id, the `+` and `-` can be
     * prepended to the id, which denote whether the
     * respective organization should be included or
     * excluded from the result set.
     * Accepts up to 100 organization ids.
     *
     * @var ?array<string> $organizationId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_id')]
    public ?array $organizationId = null;

    /**
     * Returns users that match the given query.
     *
     * For possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user ids, first and last names.
     * The query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.
     *
     * @var ?string $query
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;

    /**
     * Returns users that had session activity since the given date, with day precision.
     *
     * Providing a value with higher precision than day will result in an error.
     * Example: use 1700690400000 to retrieve users that had session activity from 2023-11-23 until the current day.
     *
     * @var ?int $lastActiveAtSince
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=last_active_at_since')]
    public ?int $lastActiveAtSince = null;

    /**
     * Applies a limit to the number of results returned.
     *
     * Can be used for paginating the results together with `offset`.
     *
     * @var ?int $limit
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;

    /**
     * Skip the first `offset` results when paginating.
     *
     * Needs to be an integer greater or equal to zero.
     * To be used in conjunction with `limit`.
     *
     * @var ?int $offset
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;

    /**
     * Allows to return users in a particular order.
     *
     * At the moment, you can order the returned users by their `created_at`,`updated_at`,`email_address`,`web3wallet`,`first_name`,`last_name`,`phone_number`,`username`,`last_active_at`,`last_sign_in_at`.
     * In order to specify the direction, you can use the `+/-` symbols prepended in the property to order by.
     * For example, if you want users to be returned in descending order according to their `created_at` property, you can use `-created_at`.
     * If you don't use `+` or `-`, then `+` is implied. We only support one `order_by` parameter, and if multiple `order_by` parameters are provided, we will only keep the first one. For example,
     * if you pass `order_by=username&order_by=created_at`, we will consider only the first `order_by` parameter, which is `username`. The `created_at` parameter will be ignored in this case.
     *
     * @var ?string $orderBy
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_by')]
    public ?string $orderBy = null;

    /**
     * @param  ?array<string>  $emailAddress
     * @param  ?array<string>  $phoneNumber
     * @param  ?array<string>  $externalId
     * @param  ?array<string>  $username
     * @param  ?array<string>  $web3Wallet
     * @param  ?array<string>  $userId
     * @param  ?array<string>  $organizationId
     * @param  ?string  $query
     * @param  ?int  $lastActiveAtSince
     * @param  ?int  $limit
     * @param  ?int  $offset
     * @param  ?string  $orderBy
     */
    public function __construct(?array $emailAddress = null, ?array $phoneNumber = null, ?array $externalId = null, ?array $username = null, ?array $web3Wallet = null, ?array $userId = null, ?array $organizationId = null, ?string $query = null, ?int $lastActiveAtSince = null, ?int $limit = 10, ?int $offset = 0, ?string $orderBy = '-created_at')
    {
        $this->emailAddress = $emailAddress;
        $this->phoneNumber = $phoneNumber;
        $this->externalId = $externalId;
        $this->username = $username;
        $this->web3Wallet = $web3Wallet;
        $this->userId = $userId;
        $this->organizationId = $organizationId;
        $this->query = $query;
        $this->lastActiveAtSince = $lastActiveAtSince;
        $this->limit = $limit;
        $this->offset = $offset;
        $this->orderBy = $orderBy;
    }
}